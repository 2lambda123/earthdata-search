ns = @edsc.map

ns.ImageMap = do (window, L, page=@edsc.page) ->

  class ImageMap

    loadImageMap: ->
      new ImageMap
      @map = L.map('image-map', minZoom: 1, maxZoom: 1, center: [0, 0], zoom: 0, crs: L.CRS.Simple, zoomControl: false, attributionControl: false)
      # Disable drag and zoom handlers.
      @map.dragging.disable()
      @map.touchZoom.disable()
      @map.doubleClickZoom.disable()
      @map.scrollWheelZoom.disable()
      # Disable tap handler, if present.
      @map.tap.disable() if (map.tap)

      w = 270
      h = 134
      url = window.location.origin + '<%= image_path('image-map.png') %>'
      southWest = @map.unproject([0, h], @map.getMaxZoom())
      northEast = @map.unproject([w, 0], @map.getMaxZoom())
      bounds = new (L.LatLngBounds)(southWest, northEast)
      L.imageOverlay(url, bounds).addTo @map
      @map.setMaxBounds bounds

      layer = page.ui.datasetsList.selected().buildLayer(color: "#54F7A3", fillOpacity: 0.4, weight: 1)
      layer.addTo(@map)

  exports = ImageMap
