#!/bin/sh

# Server config
api_endpoint='https://api.echo.nasa.gov'
login_path='/echo-rest/tokens.json'
granules_path='/catalog-rest/echo_catalog/granules.json'
client_id='Earthdata Search Download Script'

# Variables to be set by ERB
query='<%=raw @query %>'
user_ip_address='<%=raw @ip %>'
urs_username='<%=raw @user_id %>'

fail_with_error() {
    echo $1 1>&2
    exit 1
}

get_urs_password() {
    stty -echo
    printf "EOSDIS URS password for $urs_username: "
    read urs_password
    stty echo
    printf "\n"
}

parse_echo_errors() {
    if [ "`echo "${1}" | grep 'errors'`" != "" ]
    then
        echo_errors=$(echo "$1" | sed 's/.*"\([^"]*\)"[^"]*$/\1/')
    fi
}

fail_on_echo_error() {
    parse_echo_errors "$1"
    if [ "$echo_errors" != '' ]
    then
        fail_with_error "$echo_errors"
    fi
}

if command -v curl >/dev/null 2>&1
then
    echo_post() {
        echo_response=$(curl -qsSi -XPOST -H"Content-Type: application/json" -d"$2" "$api_endpoint$1")
        fail_on_echo_error "$echo_response"
    }

    echo_get() {
        echo_response=$(curl -qsSi -XGET -H"Echo-Token: $echo_token" "$api_endpoint$1?$2")
        fail_on_echo_error "$echo_response"
    }

    fetch_urls() {
        echo $(echo "$@" | sed 's/\("[^"]*"\)/-O \1/g') | xargs curl
    }

elif command -v wget >/dev/null 2>&1
then
    echo_post() {
        echo_response=$(wget --header='Content-Type: application/json' --post-data="$2" -qSO - "$api_endpoint$1" 2>&1)
        fail_on_echo_error "$echo_response"
    }

    echo_get() {
        echo_response=$(wget --header="Echo-Token: $echo_token" -qSO - "$api_endpoint$1?$2" 2>&1)
        fail_on_echo_error "$echo_response"
    }

    fetch_urls() {
        echo $(echo "$@" | sed 's/"\([^"]*\)"/\1/g') | xargs wget
    }
else
    fail_with_error "Error: Could not find a command-line downloader.  Please install curl or wget"
fi

get_echo_token() {
    local _post_body="{\"token\": {\"username\": \"$urs_username\", \"password\": \"$urs_password\", \"client_id\": \"$client_id\", \"user_ip_address\": \"$user_ip_address\"}}"
    echo_post $login_path "$_post_body"
    echo_token=$(echo "$echo_response" | grep -o '"id":"[^"]*"' | sed 's/^.*"id":"\([^"]*\)".*$/\1/')
}

fetch_results() {
    local page_num=1
    local at_end="false"

    while [ "$at_end" != '' ]
    do
        echo_get $granules_path $query"&online_only=true&page_size=2000&page_num=$page_num"

        mkdir -p echo-download
        cd echo-download
        fetch_urls $(echo "$echo_response" | grep -o '{[^{]*/data#"[^}]*}' | sed -n 's/^.*"href":"\([^"]*\)".*$/"\1"/p')
        cd ..

        at_end=$(echo "$echo_response" | grep 'Echo-Cursor-At-End: false')
        page_num=`expr $page_num + 1`
    done
}

get_urs_password
get_echo_token
fetch_results
