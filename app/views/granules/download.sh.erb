#!/bin/sh

#TODO: ASF special case

if command -v curl >/dev/null 2>&1
then
    STATUS_CODE=`curl -s -z "$(date)" -w %{http_code} <%= raw @urls.first %> | tail -1`
    if [ "$STATUS_CODE" -ne "200" ]; then
    # Need URS authentication
    if [ ! -f ~/.netrc ]; then
        echo "\n.netrc file not found. Please configure your username and password for authentication using a .netrc file:\n    > cd ~\n    > touch .netrc\n    > echo \"machine urs.earthdata.nasa.gov login <uid> password <password>\" > .netrc\n    > chmod 0600 .netrc\nwhere <uid> is your Earthdata Login username and <password> is your Earthdata Login password."
        exit
    fi

    APPROVED_STATUS=`curl -s -b ~/.urs_cookies -c ~/.urs_cookies -L --max-redirs 2 -n <%= raw @urls.first %> -w %{http_code} | tail  -1`
    if [ "$APPROVED_STATUS" -ne "302" ]; then
        # User didn't approve the app. Direct users to approve the app in URS
        echo "\nERROR: this is your first time retrieving data from this provider using Earthdata Login credentials. You will need to authorize the provider's web service (application) in Earthdata Login GUI before running this script again."
        exit
    else
        fetch_urls() {
            while read -r line; do curl -b cookies.txt -Og -L $line; done;
        }
    fi
elif command -v wget >/dev/null 2>&1
then
    # We can't use wget to poke provider server to get info whether or not URS was integrated without download at least one of the files.
    echo "\nWARNING: Can't find curl, use wget instead, which may affect data retrieval that authenticates through Earthdata Login."
    if [ ! -f ~/.netrc ]; then
        echo "\n.netrc file not found. Please configure your username and password for authentication using a .netrc file:\n    > cd ~\n    > touch .netrc\n    > echo \"machine urs.earthdata.nasa.gov login <uid> password <password>\" > .netrc\n    > chmod 0600 .netrc\nwhere <uid> is your Earthdata Login username and <password> is your Earthdata Login password."
        exit
    fi

    while read -r line; do wget --load-cookies ~/.urs_cookies --save-cookies ~/.urs_cookies --keep-session-cookies $line; done;
else
    fail_with_error "Error: Could not find a command-line downloader.  Please install curl or wget"
fi

fetch_urls <<'EDSCEOF'
<% @urls.each do |url| %><%=raw url%>
<% end %>EDSCEOF
